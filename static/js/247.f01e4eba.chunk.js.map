{"version":3,"file":"static/js/247.f01e4eba.chunk.js","mappings":"2OAiEA,UAzDa,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,IAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAEwBC,EAAAA,EAAAA,IAAeN,GAFvC,OAEcO,EAFd,OAGQH,EAAQG,GAHhB,gDAKQC,EAAAA,GAAAA,MAAY,KAAMC,SAL1B,0DADY,uBAAC,WAAD,wBASZC,EACH,GAAE,CAACV,IACCG,EAKL,OACA,8BAEwB,IAAhBA,EAAKQ,QACD,wBACKR,EAAKS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACjC,OACI,yBACI,4BACI,gBAAKC,IAAKH,EAAeI,EAAAA,EAAWJ,EAAeK,EAAAA,EAASC,MAAM,QAAQC,IAAKR,KAC/E,uBAAIA,KACJ,uCAAeG,SAJdD,EAQhB,OAGL,gDAMf,C,6ECpDM,IAAMG,EAAW,sCACXC,EAAU,kE,8LCCvBG,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAU,mCAAG,6GAEFF,EAAAA,GAAAA,IAAA,sCAAyCC,IAFvC,cAEZhB,EAFY,yBAGXA,EAAEkB,KAAKC,SAHI,gCAKlBC,QAAQC,IAAR,MALkB,yDAAH,qDAUVC,EAAW,mCAAG,WAAMC,GAAN,gFACjBC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASV,EACTO,MAAAA,IAHmB,kBAMHR,EAAAA,GAAAA,IAAA,uBAA0BS,IANvB,cAMbxB,EANa,yBAOZA,EAAEkB,KAAKC,SAPK,gCASnBC,QAAQC,IAAR,MATmB,yDAAH,sDAcXM,EAAiB,mCAAG,WAAMlC,GAAN,gGAETsB,EAAAA,GAAAA,IAAA,gBAAmBtB,EAAnB,oBAAsCuB,IAF7B,cAEnBhB,EAFmB,yBAGlBA,EAAEkB,MAHgB,gCAKzBE,QAAQC,IAAR,MALyB,yDAAH,sDASjBtB,EAAc,mCAAG,WAAMN,GAAN,gGAENsB,EAAAA,GAAAA,IAAA,gBAAmBtB,EAAnB,4BAA8CuB,IAFxC,cAEhBhB,EAFgB,yBAGfA,EAAEkB,KAAKtB,MAHQ,gCAKtBwB,QAAQC,IAAR,MALsB,yDAAH,sDAUdO,EAAY,mCAAG,WAAMnC,GAAN,gGAEJsB,EAAAA,GAAAA,IAAA,gBAAmBtB,EAAnB,4BAA8CuB,IAF1C,cAEdhB,EAFc,yBAGbA,EAAEkB,KAAKC,SAHM,gCAKpBC,QAAQC,IAAR,MALoB,yDAAH,qD","sources":["components/Cast/Cast.jsx","defaultImages/defaultImages.jsx","services/api.js"],"sourcesContent":["import { DEF_IMG, DEF_PATH } from 'defaultImages/defaultImages';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { fetchMovieCast } from 'services/api';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        async function getMoviesCast() {\n            try {\n                const r = await fetchMovieCast(movieId);\n                setCast(r);\n            } catch (error) {\n                toast.error(error.message)\n            }\n        }\n        getMoviesCast();\n    }, [movieId]);\n    if (!cast) {\n        return;\n    }\n\n\n    return (\n    <>\n        {\n            cast.length !== 0 ? (\n                <ul>\n                    {cast.map(({ name, profile_path, id, character }) => {\n                        return (\n                            <li key={id}>\n                                <div>\n                                    <img src={profile_path ? DEF_PATH + profile_path : DEF_IMG} width='160px' alt={name} />\n                                    <p>{name}</p>\n                                    <p>Character: {character}</p>\n                                </div>\n                            </li>\n                        );\n                    })}\n                </ul>\n            ) : (\n                <p>No information here</p>\n                )\n   \n            }\n    </>    \n    );\n};\n\nCast.propTypes = {\n    cast: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            profile_path: PropTypes.string,\n            id: PropTypes.number.isRequired,\n            character: PropTypes.string,\n        })\n    ),\n};\n\nexport default Cast;","export const DEF_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const DEF_IMG = 'https://en-images.kinorium.com/movie/1080/1662246.jpg?1556722314';","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '941cb65a7dbaeeae793e2e0a05475118';\n\n\nexport const fetchFilms = async () => {\n    try {\n        const r = await Axios.get(`trending/movie/week?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchSource = async query => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query,\n    });\n    try {\n        const r = await Axios.get(`search/movie?${params}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n        return r.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n        return r.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchReviews = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n// GET /trending/{media_type}/{time_window}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","r","toast","message","getMoviesCast","length","map","name","profile_path","id","character","src","DEF_PATH","DEF_IMG","width","alt","Axios","API_KEY","fetchFilms","data","results","console","log","fetchSource","query","params","URLSearchParams","api_key","fetchMovieDetails","fetchReviews"],"sourceRoot":""}
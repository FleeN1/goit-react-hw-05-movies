{"version":3,"file":"static/js/304.8ff5543b.chunk.js","mappings":"gNAGaA,E,OAAOC,GAAAA,GAAH,kP,SCGJC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MACTC,EAA2BH,EAA3BG,GAAIC,EAAuBJ,EAAvBI,YAAaC,EAAUL,EAAVK,MACzB,OACI,+BACI,SAACR,EAAD,WACI,UAAC,KAAD,CAASS,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMP,GAA5C,WACI,gBAAKQ,IAAKL,EAAcM,EAAAA,EAAWN,EAAcO,EAAAA,EAASC,MAAM,QAAQC,IAAKR,KAC7E,uBAAIA,UAKvB,ECMD,EArBmB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OAClB,OACI,0BACI,wBACKA,EAAOC,KAAI,SAAAf,GAAK,OACb,SAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMG,GADvB,OAMhC,C,6ECdM,IAAMO,EAAW,sCACXC,EAAU,kE,4JCGVK,EAAUlB,EAAAA,GAAAA,IAAH,sBAEPmB,EAAQnB,EAAAA,GAAAA,GAAH,iF,SCuBlB,EAvBa,WACT,OAA4BoB,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGACoBC,EAAAA,EAAAA,MADpB,OACUC,EADV,OAEIH,EAAUG,GAFd,4CADY,uBAAC,WAAD,wBAMZC,EACH,GAAE,KAIC,2BACI,UAACP,EAAD,YACI,SAACC,EAAD,6BACCH,EAAOU,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYX,OAAQA,QAIzD,C,8LCzBDY,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHN,EAAU,mCAAG,6GAEFK,EAAAA,GAAAA,IAAA,sCAAyCC,IAFvC,cAEZL,EAFY,yBAGXA,EAAEM,KAAKC,SAHI,gCAKlBC,QAAQC,IAAR,MALkB,yDAAH,qDAUVC,EAAW,mCAAG,WAAMC,GAAN,gFACjBC,EAAS,IAAIC,gBAAgB,CAC/BC,QAAST,EACTM,MAAAA,IAHmB,kBAMHP,EAAAA,GAAAA,IAAA,uBAA0BQ,IANvB,cAMbZ,EANa,yBAOZA,EAAEM,KAAKC,SAPK,gCASnBC,QAAQC,IAAR,MATmB,yDAAH,sDAcXM,EAAiB,mCAAG,WAAMC,GAAN,gGAETZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,oBAAsCX,IAF7B,cAEnBL,EAFmB,yBAGlBA,EAAEM,MAHgB,gCAKzBE,QAAQC,IAAR,MALyB,yDAAH,sDASjBQ,EAAc,mCAAG,WAAMD,GAAN,gGAENZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,4BAA8CX,IAFxC,cAEhBL,EAFgB,yBAGfA,EAAEM,KAAKY,MAHQ,gCAKtBV,QAAQC,IAAR,MALsB,yDAAH,sDAUdU,EAAY,mCAAG,WAAMH,GAAN,gGAEJZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,4BAA8CX,IAF1C,cAEdL,EAFc,yBAGbA,EAAEM,KAAKC,SAHM,gCAKpBC,QAAQC,IAAR,MALoB,yDAAH,qD,sBCjDV,SAASW,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","defaultImages/defaultImages.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 100%;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25), 0 7px 10px rgba(0, 0, 0, 0.15);\n  }`","import { DEF_IMG, DEF_PATH } from 'defaultImages/defaultImages';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport { Item } from './MoviesItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n    const location = useLocation();\n    const { id, poster_path, title } = movie;\n    return (\n        <>\n            <Item>\n                <NavLink to={`/movies/${id}`} state={{from: location}}>\n                    <img src={poster_path ? DEF_PATH + poster_path : DEF_IMG} width='160px' alt={title} />\n                    <p>{title}</p>\n                </NavLink>\n            </Item>\n        </>\n    );\n};\n\nMovieItem.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n    }),\n};\n\nexport default MovieItem;\n","import PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MoviesItem/MoviesItem';\n\n\nconst MoviesList = ({ movies }) => {\n    return (\n        <div>\n            <ul>\n                {movies.map(movie => (\n                    <MovieItem movie={movie} key={movie.id} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired\n        })\n    ),\n};\n\nexport default MoviesList;","export const DEF_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const DEF_IMG = 'https://en-images.kinorium.com/movie/1080/1662246.jpg?1556722314';","import styled from 'styled-components';\n\n\n\nexport const Section = styled.div``\n\nexport const Title = styled.h2`\nmargin-bottom: 30px;\nfont-size: 40px;\ncolor: #F3EBEB;\n`;","import { useEffect } from \"react\";\nimport { useState } from \"react\"\nimport { fetchFilms } from \"services/api\";\nimport MoviesList  from 'components/MoviesList/MoviesList';\nimport { Section, Title } from \"./Home.styled\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        async function getTrend() {\n            const r = await fetchFilms();\n            setMovies(r);\n\n        }\n        getTrend();\n    }, []);\n\n\n    return (\n        <main>\n            <Section>\n                <Title>Trending Today</Title>\n                {movies.length > 0 && <MoviesList movies={movies} />}\n            </Section>\n        </main>\n    );\n};\n\nexport default Home;","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '941cb65a7dbaeeae793e2e0a05475118';\n\n\nexport const fetchFilms = async () => {\n    try {\n        const r = await Axios.get(`trending/movie/week?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchSource = async query => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query,\n    });\n    try {\n        const r = await Axios.get(`search/movie?${params}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n        return r.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n        return r.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchReviews = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n// GET /trending/{media_type}/{time_window}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Item","styled","MovieItem","movie","location","useLocation","id","poster_path","title","to","state","from","src","DEF_PATH","DEF_IMG","width","alt","movies","map","Section","Title","useState","setMovies","useEffect","fetchFilms","r","getTrend","length","MoviesList","Axios","API_KEY","data","results","console","log","fetchSource","query","params","URLSearchParams","api_key","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchReviews","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}
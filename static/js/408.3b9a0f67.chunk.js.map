{"version":3,"file":"static/js/408.3b9a0f67.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\n\nconst MovieCard = ({ movie }) => {\n    const { title, vote_average, poster_path, overview, genres, release_date } = movie;\n\n\n    return (\n        <div>\n            <img src={poster_path} alt={title} />\n            <div>\n                <h2>\n                    {title} ({release_date.slice(0, 4)})\n                </h2>\n                <p>User Score: {Math.round(vote_average * 10)}%</p>\n                <h3>OverView</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres.map(genre => genre.name).join(',')}</p>\n            </div>\n        </div>\n    );\n};\n\nMovieCard.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        poster_path: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.string.isRequired,\n        })\n        ),\n        release_date: PropTypes.string.isRequired,\n    }),\n};\n\nexport default MovieCard;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate, NavLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { RiReplyLine } from 'react-icons/ri';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { fetchMovieDetails } from 'services/api';\n\n\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [status, setStatus] = useState('idle');\n    const navigate = useNavigate();\n    const location = useLocation();\n    const arrowBack = location.state?.from ?? '/';\n\n    useEffect(() => {\n        async function getMovieDetails() {\n            try {\n                setStatus('pending');\n                const r = await fetchMovieDetails(movieId);\n                setMovie(r);\n                setStatus('resolved');\n            } catch (error) {\n                toast.error(error.message)\n                setStatus('rejected');\n            }\n        }\n        getMovieDetails();\n    }, [movieId]);\n\n    const handleSubmit = () => {\n        navigate(arrowBack, { replace: true });\n    }\n\n    return (\n        <>\n            <button type='button' onClick={handleSubmit}>\n                <RiReplyLine size='14px' />\n                Back ðŸ˜Š\n            </button>\n            {status === 'pending' && <Loader />}\n            {movie && (\n                <div>\n                    <MovieCard movie={movie} />\n                    <div>\n                        <h2>INFO Movie</h2>\n                        <ul>\n                            <li>\n                                <NavLink to='cast'>Cast</NavLink>\n                            </li>\n                            <li>\n                                <NavLink to='reviews'>Reviews</NavLink>\n                            </li>\n                        </ul>\n                    </div>\n                    <Suspense fallback={<Loader />}>\n                        <Outlet />\n                    </Suspense>\n                </div>\n            )}\n            {!movie || (status === 'rejected' && <h2>Sorry, not found INFO</h2>)}\n        </>\n    );\n};\n\nexport default MovieDetails;\n","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '941cb65a7dbaeeae793e2e0a05475118';\n\n\nexport const fetchFilms = async () => {\n    try {\n        const r = await Axios.get(`trending/movie/week?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchSource = async query => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query,\n    });\n    try {\n        const r = await Axios.get(`search/movie?${params}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n        return r.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n        return r.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const fetchReviews = async movieId => {\n    try {\n        const r = await Axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n        return r.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n// GET /trending/{media_type}/{time_window}"],"names":["movie","title","vote_average","poster_path","overview","genres","release_date","src","alt","slice","Math","round","map","genre","name","join","movieId","useParams","useState","setMovie","status","setStatus","navigate","useNavigate","arrowBack","useLocation","state","from","useEffect","fetchMovieDetails","r","toast","message","getMovieDetails","type","onClick","replace","size","Loader","to","Suspense","fallback","Axios","API_KEY","fetchFilms","data","results","console","log","fetchSource","query","params","URLSearchParams","api_key","fetchMovieCast","cast","fetchReviews"],"sourceRoot":""}